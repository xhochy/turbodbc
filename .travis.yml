dist: trusty
sudo: required

services:
  - docker

matrix:
  include:
  - os: osx
    osx_image: xcode9.4
    language: generic
    env:
    - TRAVIS_PYTHON_VERSION="2.7.12"
    - TURBODBC_TEST_CONFIGURATION_FILES="query_fixtures_postgresql.json,query_fixtures_mysql.json"
    - ODBC_DIR=odbc_osx
#  Disable for now until a workaround for the detection of pyenv versions by pybind11
#  is found
#  - os: osx
#    language: generic
#    env:
#    - TRAVIS_PYTHON_VERSION="3.6.0"
#    - TURBODBC_TEST_CONFIGURATION_FILES="query_fixtures_postgresql.json"
#    - ODBC_DIR=odbc_osx
  - os: linux
    language: python
    python: "2.7"
    env:
    - TURBODBC_TEST_CONFIGURATION_FILES="query_fixtures_postgresql.json,query_fixtures_mysql.json,query_fixtures_mssql.json"
    - ODBC_DIR=odbc
  - os: linux
    language: python
    python: "3.5"
    env:
    - TURBODBC_TEST_CONFIGURATION_FILES="query_fixtures_postgresql.json,query_fixtures_mysql.json"
    - ODBC_DIR=odbc
  - os: linux
    language: python
    python: "3.6"
    env:
    - TURBODBC_TEST_CONFIGURATION_FILES="query_fixtures_postgresql.json,query_fixtures_mysql.json"
    - ODBC_DIR=odbc


services:
  - mysql
  - postgresql

addons:
  apt:
    packages:
      - unixodbc
      - unixodbc-dev
      - libboost-date-time-dev
      - libboost-locale-dev
      - libboost-system-dev
      - libmyodbc
      - odbc-postgresql=1:09.02.0100-2ubuntu1
      - tdsodbc
      - odbcinst1debian2

before_install: |
  if [ "$TRAVIS_OS_NAME" == "osx" ]; then
    brew update
    brew outdated pyenv || brew upgrade pyenv
    brew install unixodbc
    brew install pyenv-virtualenv
    brew install psqlodbc
    eval "$(pyenv init -)"
    pyenv install ${TRAVIS_PYTHON_VERSION}
    pyenv virtualenv ${TRAVIS_PYTHON_VERSION} turbodbc
    pyenv activate turbodbc
    python --version
    pip install pytest mock

    echo "Setting up preinstalled PostgreSQL database"
    rm -rf /usr/local/var/postgres
    initdb /usr/local/var/postgres
    pg_ctl -D /usr/local/var/postgres -w start
    createuser -s postgres
    psql -U postgres -c 'CREATE DATABASE test_db;'
    psql -U postgres -c "ALTER USER postgres WITH PASSWORD 'password';"
  fi

install:
  - pip install numpy==1.14.5 pyarrow==0.11.1 six twine pytest-cov coveralls pandas

before_script: |
  if [ "$TRAVIS_OS_NAME" == "linux" ]; then
    docker run -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=StrongPassword1' -p 1433:1433 --name mssql1 -d mcr.microsoft.com/mssql/server:2017-latest
    # Wait until MS SQL is started
    sudo bash -c 'curl https://packages.microsoft.com/config/ubuntu/14.04/prod.list > /etc/apt/sources.list.d/mssql-release.list'
    sudo bash -c 'curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -'
    sudo apt-get update
    sudo ACCEPT_EULA=Y apt-get install msodbcsql17 unixodbc-dev
    dpkg -L msodbcsql17

    sleep 20
    docker exec -it mssql1 /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P 'StrongPassword1' -Q 'CREATE DATABASE test_db'
    $TRAVIS_BUILD_DIR/travis/setup_test_dbs.sh
  fi

script:
  - export ODBCSYSINI=${PWD}/travis/${ODBC_DIR}
  - mkdir build && cd build
  - cmake -DBUILD_COVERAGE=ON -DCMAKE_INSTALL_PREFIX=./dist -DPYBIND11_PYTHON_VERSION=${TRAVIS_PYTHON_VERSION} ..
  - make -j4
  - pip install numpy==1.14.5
  - |
      if [ "$TRAVIS_OS_NAME" == "osx" ]; then
        ctest -E turbodbc_arrow_unit_test --verbose
      else
        ctest --verbose
      fi
  - cd ..
  - mkdir gcov
  - cd gcov
  - gcov -l -p `find ../build -name "*.gcda"` > /dev/null
  - echo "Removing coverage for boost and C++ standard library"
  - find . -name "*#boost#*" | xargs rm
  - find . -name "*#c++#*" | xargs rm
  - cd ..
  - cd python/turbodbc_test/
  - echo "Uploading Python coverage"
  - bash <(curl -s https://codecov.io/bash) -s $PWD/gcov/ -s $PWD -X gcov
  - cd ../..
  - echo "Uploading C++ coverage"
  - bash <(curl -s https://codecov.io/bash) -s $PWD/gcov/ -X coveragepy -X gcov

  - cd build
  - make install
  - cd dist
  - python setup.py sdist
  - cd dist
  - pip install *.tar.gz
  - cd ..
  - rm -rf dist


deploy:
  skip_cleanup: true
  provider: pypi
  server: "https://upload.pypi.org/legacy/"
  user: MathMagic
  password:
    secure: "A0Xv0/7EXcDUzevO3lLVr6OUg1wy1NrFKGwruHr0rUfdBBRmDHVm2njvuiRkPgMH0IiWw/HscxNvHYs1U1CpGsWLJ+/TLOc5UQEKl9kkopEAPrwgQeIg7jOiC6bUDgXbZ5iYU8PIl7ygpBNoGJ2sdIP4nwH1COtntSdVr3oy7VwcVge0QhvccYTt4b49YcaJ6rBMntBWo2UhFZ1PGGWrCbPJB+lhwOv1OkbIyV8jXQ3FrENJGIDQiVMoTdWdoYDPP05lFVrsADwD+TRxEdM7z+cIyFhTTUuabRbPDyRiUd69it2WfCRUb4r+fNeF1abh8GRkk5jE4RQWt/DJiZG/yqZU3SKvIf4/pxZywpmqIZr6CEAJ3iriHHN0Khv1fPnyJ6LJ+paOHcrkDKFTbOb32pOjOdDr9UVN5z7tHdN1MmrrMAbzaIcldLcHq69iocXfUWWR5H/CR43Tm422z0ILbMsdQ+z2epTG+l/qLs8ZxSjWeleMIff5n2x3k6U4QXcdwM8x8axYYgq9WoutI90/97zpvf0h8J8K5+Mr7ucNRLbsPU0OKMZknBOT0SRtJFxokDYZU0OCFLIukIlUYCRuh4es/9w30+kPExfhB5i7LKnpvILtPqIU6KDiUQe8mW1+GnnW/hk3WCdkLT6gwOBNBLVPoIJEuCcYjKdHksMrCnY="
  on:
    tags: true
    os: linux
    python: "2.7"
    branch: master
    repo: blue-yonder/turbodbc
